<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!--jedis连接池配置-->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--最大连接数-->
		<property name="maxTotal" value="${jedis.maxTotal}"/>
		<!--最大空闲数-->
		<property name="maxIdle" value="${jedis.maxIdle}"/>
		<!--每次释放连接的最大数目-->
		<property name="numTestsPerEvictionRun" value="1024"/>
		<!--释放连接的扫描间隔-->
		<property name="timeBetweenEvictionRunsMillis" value="30000"/>
		<!--连接最小空闲时间-->
		<property name="minEvictableIdleTimeMillis" value="1800000"/>
		<!--连接空闲多久后释放，当空闲时间>最大空闲连接数时直接释放-->
		<property name="softMinEvictableIdleTimeMillis" value="10000"/>
		<!--获取连接时的最大等待毫秒数，小于零：阻塞不确定的时间，默认1-->
		<property name="maxWaitMillis" value="1500"/>
		<!--在获取连接的时候检查有效性，默认false-->
		<property name="testOnBorrow" value="true"/>
		<!--连接耗尽时是否阻塞，false报异常，ture阻塞直到超时，默认true-->
		<property name="blockWhenExhausted" value="false"/>
	</bean>
	<!--jedis客户端单机版-->
<!--	<bean id="redisClient" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="host" value="${jedis.host}"/>
		<constructor-arg name="port" value="${jedis.port}"/>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
	</bean>-->

	<!--jedis集群版配置-->
	<bean id="redisClient" class="redis.clients.jedis.JedisCluster">
		<constructor-arg name="nodes">
			<set>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg name="host" value="${redis.host}"/>
					<constructor-arg name="port" value="${redis1.port}"/>
				</bean>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg name="host" value="${redis.host}"/>
					<constructor-arg name="port" value="${redis2.port}"/>
				</bean>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg name="host" value="${redis.host}"/>
					<constructor-arg name="port" value="${redis3.port}"/>
				</bean>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg name="host" value="${redis.host}"/>
					<constructor-arg name="port" value="${redis4.port}"/>
				</bean>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg name="host" value="${redis.host}"/>
					<constructor-arg name="port" value="${redis5.port}"/>
				</bean>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg name="host" value="${redis.host}"/>
					<constructor-arg name="port" value="${redis6.port}"/>
				</bean>
			</set>
		</constructor-arg>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
	</bean>
</beans>




















